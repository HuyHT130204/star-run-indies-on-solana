.gameContainer {
  position: relative;
  width: 100%;
  height: 100%;
  background: radial-gradient(ellipse at center, #000033 0%, #000011 50%, #000000 100%);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.gameCanvas {
  border: 2px solid rgba(0, 255, 255, 0.4);
  backdrop-filter: blur(10px);
  border-radius: 15px;
  background-image: url('/background.jpg');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  box-shadow: 
    0 0 30px rgba(0, 255, 255, 0.3),
    0 0 60px rgba(0, 100, 255, 0.2),
    inset 0 0 30px rgba(0, 255, 255, 0.1);
  max-width: 900px;
  max-height: 600px;
  width: 90%;
  height: 70%;
  
  canvas {
    border-radius: 13px;
    display: block;
    width: 100% !important;
    height: 100% !important;
  }
}

// Compact Score Display
.compactScoreDisplay {
  position: absolute;
  top: 15px;
  left: 15px;
  z-index: 10;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  pointer-events: none;
  max-width: 250px;
  gap: 8px;
}

.scoreRow {
  display: flex;
  gap: 15px;
  align-items: center;
}

.levelRow {
  display: flex;
  gap: 15px;
  align-items: center;
}

.statusIndicators {
  position: absolute;
  top: 15px;
  right: 15px;
  z-index: 10;
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  pointer-events: none;
  gap: 5px;
  max-width: 200px;
}

.score, .highScore, .difficultyLevel {
  color: #fff;
  font-size: 1rem;
  font-weight: bold;
  text-shadow: 
    0 0 10px rgba(0, 255, 255, 0.8),
    0 0 20px rgba(0, 255, 255, 0.4);
  background: rgba(0, 0, 0, 0.7);
  padding: 6px 12px;
  border-radius: 6px;
  border: 2px solid rgba(0, 255, 255, 0.4);
  backdrop-filter: blur(10px);
}

.highScore {
  font-size: 0.9rem;
  padding: 4px 10px;
}

.difficultyLevel {
  color: #ff6b6b;
  border-color: rgba(255, 107, 107, 0.4);
  text-shadow: 
    0 0 10px rgba(255, 107, 107, 0.8),
    0 0 20px rgba(255, 107, 107, 0.4);
}

.levelProgress {
  display: flex;
  flex-direction: column;
  gap: 5px;
  background: rgba(0, 0, 0, 0.8);
  padding: 10px 15px;
  border-radius: 8px;
  border: 2px solid rgba(255, 107, 107, 0.4);
  backdrop-filter: blur(10px);
  margin-bottom: 8px;
}

.levelProgressLabel {
  color: #ff6b6b;
  font-size: 0.85rem;
  font-weight: bold;
  text-shadow: 
    0 0 8px rgba(255, 107, 107, 0.8),
    0 0 15px rgba(255, 107, 107, 0.4);
}

.levelProgressBar {
  width: 100%;
  height: 10px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 5px;
  overflow: hidden;
  border: 1px solid rgba(255, 107, 107, 0.3);
  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.5);
}

.levelProgressFill {
  height: 100%;
  background: linear-gradient(90deg, #ff6b6b 0%, #ff8e8e 50%, #ffb3b3 100%);
  border-radius: 4px;
  transition: width 0.3s ease;
  box-shadow: 
    0 0 10px rgba(255, 107, 107, 0.8),
    0 0 20px rgba(255, 107, 107, 0.4);
  animation: progressGlow 2s infinite;
}

@keyframes progressGlow {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}

.levelProgressText {
  color: rgba(255, 255, 255, 0.9);
  font-size: 0.75rem;
  font-weight: 600;
  text-shadow: 0 0 5px rgba(255, 107, 107, 0.5);
  text-align: center;
}

.healthBar {
  display: flex;
  align-items: center;
  gap: 8px;
  background: rgba(0, 0, 0, 0.7);
  padding: 6px 12px;
  border-radius: 6px;
  border: 2px solid rgba(0, 255, 255, 0.4);
  backdrop-filter: blur(10px);
}

.healthLabel {
  color: #fff;
  font-size: 0.85rem;
  font-weight: bold;
  text-shadow: 
    0 0 8px rgba(0, 255, 255, 0.8),
    0 0 15px rgba(0, 255, 255, 0.4);
}

.healthContainer {
  width: 80px;
  height: 8px;
  background: rgba(255, 255, 255, 0.2);
  border-radius: 4px;
  overflow: hidden;
  border: 1px solid rgba(255, 255, 255, 0.3);
  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.5);
}

.healthFill {
  height: 100%;
  transition: width 0.3s ease, background-color 0.3s ease;
  border-radius: 3px;
  box-shadow: 
    0 0 10px currentColor,
    0 0 20px currentColor;
  animation: healthPulse 2s infinite;
}

@keyframes healthPulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.85; }
}

.healthText {
  color: #fff;
  font-size: 0.8rem;
  font-weight: bold;
  text-shadow: 
    0 0 8px rgba(0, 255, 255, 0.8),
    0 0 15px rgba(0, 255, 255, 0.4);
  min-width: 30px;
  text-align: right;
}

.newHighScore {
  color: #ffff00;
  font-size: 1.1rem;
  font-weight: bold;
  text-shadow: 
    0 0 15px rgba(255, 255, 0, 1),
    0 0 30px rgba(255, 255, 0, 0.6);
  background: rgba(255, 255, 0, 0.15);
  padding: 8px 15px;
  border-radius: 8px;
  border: 2px solid rgba(255, 255, 0, 0.6);
  backdrop-filter: blur(10px);
  animation: pulse 1s infinite;
}

@keyframes pulse {
  0%, 100% { 
    opacity: 1; 
    transform: scale(1);
    box-shadow: 0 0 20px rgba(255, 255, 0, 0.6);
  }
  50% { 
    opacity: 0.8; 
    transform: scale(1.05);
    box-shadow: 0 0 30px rgba(255, 255, 0, 0.8);
  }
}


.shieldStatus, .boostStatus, .invisibilityStatus, .multishotStatus, 
.magnetStatus, .timefreezeStatus, .gravityWellStatus, .meteorShowerStatus {
  color: #fff;
  font-size: 0.8rem;
  font-weight: bold;
  text-shadow: 
    0 0 10px currentColor,
    0 0 20px currentColor;
  background: rgba(0, 0, 0, 0.8);
  padding: 4px 8px;
  border-radius: 6px;
  border: 1px solid currentColor;
  backdrop-filter: blur(10px);
  animation: statusPulse 2s infinite;
}

.shieldStatus {
  color: #00ffff;
  border-color: #00ffff;
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.5);
}

.boostStatus {
  color: #ffff00;
  border-color: #ffff00;
  box-shadow: 0 0 15px rgba(255, 255, 0, 0.5);
}

.invisibilityStatus {
  color: #9c27b0;
  border-color: #9c27b0;
  box-shadow: 0 0 15px rgba(156, 39, 176, 0.5);
}

.multishotStatus {
  color: #ff5722;
  border-color: #ff5722;
  box-shadow: 0 0 15px rgba(255, 87, 34, 0.5);
}

.magnetStatus {
  color: #4caf50;
  border-color: #4caf50;
  box-shadow: 0 0 15px rgba(76, 175, 80, 0.5);
}

.timefreezeStatus {
  color: #2196f3;
  border-color: #2196f3;
  box-shadow: 0 0 15px rgba(33, 150, 243, 0.5);
}

.gravityWellStatus {
  color: #ff9800;
  border-color: #ff9800;
  box-shadow: 0 0 15px rgba(255, 152, 0, 0.5);
}

.meteorShowerStatus {
  color: #f44336;
  border-color: #f44336;
  box-shadow: 0 0 15px rgba(244, 67, 54, 0.5);
}


.aiInfo {
  display: flex;
  flex-direction: column;
  gap: 2px;
  background: rgba(0, 0, 0, 0.7);
  padding: 8px 10px;
  border-radius: 5px;
  border: 1px solid rgba(255, 255, 255, 0.3);
  margin-top: 5px;
}

.aiLabel {
  color: #fff;
  font-size: 0.8rem;
  font-weight: bold;
  text-shadow: 0 0 5px rgba(0, 255, 255, 0.5);
  margin-bottom: 3px;
}

.aiCount {
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.7rem;
  font-weight: 500;
  text-shadow: 0 0 3px rgba(0, 255, 255, 0.3);
}

.gameOverOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.85);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 20;
  backdrop-filter: blur(10px);
}

.gameOverContent {
  text-align: center;
  color: #fff;
  background: rgba(0, 0, 0, 0.95);
  padding: 50px;
  border-radius: 25px;
  border: 3px solid rgba(0, 255, 255, 0.6);
  box-shadow: 
    0 0 40px rgba(0, 255, 255, 0.4),
    0 0 80px rgba(0, 100, 255, 0.3),
    inset 0 0 40px rgba(0, 255, 255, 0.1);

  h2 {
    font-size: 3.5rem;
    margin: 0 0 25px 0;
    color: #ff0000;
    text-shadow: 
      0 0 20px rgba(255, 0, 0, 1),
      0 0 40px rgba(255, 0, 0, 0.6),
      0 0 60px rgba(255, 0, 0, 0.4);
    animation: gameOverPulse 1s infinite;
    letter-spacing: 3px;
    font-weight: bold;
  }

  p {
    font-size: 1.3rem;
    margin: 15px 0;
    color: #00ffff;
    text-shadow: 
      0 0 10px rgba(0, 255, 255, 0.8),
      0 0 20px rgba(0, 255, 255, 0.4);
    font-weight: 600;
  }
}

@keyframes gameOverPulse {
  0%, 100% { 
    transform: scale(1);
    text-shadow: 
      0 0 20px rgba(255, 0, 0, 1),
      0 0 40px rgba(255, 0, 0, 0.6);
  }
  50% { 
    transform: scale(1.08);
    text-shadow: 
      0 0 30px rgba(255, 0, 0, 1),
      0 0 60px rgba(255, 0, 0, 0.8);
  }
}

.restartButton {
  background: linear-gradient(135deg, #00ffff 0%, #0099ff 50%, #ff00ff 100%);
  border: none;
  border-radius: 15px;
  padding: 18px 40px;
  color: #fff;
  font-size: 1.2rem;
  font-weight: bold;
  cursor: pointer;
  margin-top: 25px;
  transition: all 0.3s ease;
  text-transform: uppercase;
  letter-spacing: 2px;
  box-shadow: 
    0 5px 20px rgba(0, 255, 255, 0.4),
    0 10px 40px rgba(255, 0, 255, 0.3);
  text-shadow: 0 0 10px rgba(0, 0, 0, 0.8);

  &:hover {
    transform: translateY(-3px);
    box-shadow: 
      0 8px 25px rgba(0, 255, 255, 0.6),
      0 15px 50px rgba(255, 0, 255, 0.5);
    background: linear-gradient(135deg, #00ffff 0%, #ff00ff 50%, #00ffff 100%);
  }

  &:active {
    transform: translateY(-1px);
  }
}

.controls {
  position: absolute;
  bottom: 15px;
  left: 50%;
  transform: translateX(-50%);
  text-align: center;
  color: rgba(255, 255, 255, 0.8);
  font-size: 0.9rem;
  z-index: 10;
  background: rgba(0, 0, 0, 0.6);
  padding: 8px 20px;
  border-radius: 8px;
  border: 2px solid rgba(0, 255, 255, 0.3);
  backdrop-filter: blur(10px);

  p {
    margin: 4px 0;
    text-shadow: 
      0 0 8px rgba(0, 255, 255, 0.6),
      0 0 15px rgba(0, 255, 255, 0.3);
    font-weight: 600;
  }
}

// Responsive design
@media (max-width: 768px) {
  .gameCanvas {
    max-width: 95%;
    max-height: 60%;
    width: 95%;
    height: 60%;
  }

  .compactScoreDisplay {
    top: 8px;
    left: 8px;
    max-width: 200px;
  }

  .statusIndicators {
    top: 8px;
    right: 8px;
    max-width: 150px;
  }

  .score, .highScore, .difficultyLevel {
    font-size: 0.9rem;
    padding: 4px 8px;
  }

  .healthBar {
    padding: 4px 8px;
    gap: 6px;
  }

  .healthContainer {
    width: 60px;
    height: 6px;
  }

  .healthLabel {
    font-size: 0.75rem;
  }

  .healthText {
    font-size: 0.7rem;
  }

  .shieldStatus, .boostStatus, .invisibilityStatus, .multishotStatus, 
  .magnetStatus, .timefreezeStatus, .gravityWellStatus, .meteorShowerStatus {
    font-size: 0.7rem;
    padding: 3px 6px;
  }

  .gameOverContent {
    padding: 30px;
    margin: 20px;

    h2 {
      font-size: 2.5rem;
    }

    p {
      font-size: 1.1rem;
    }
  }

  .restartButton {
    padding: 15px 30px;
    font-size: 1rem;
  }

  .controls {
    bottom: 10px;
    font-size: 0.8rem;
    padding: 6px 15px;
  }
}

@media (max-width: 480px) {
  .gameCanvas {
    max-width: 98%;
    max-height: 55%;
    width: 98%;
    height: 55%;
  }

  .compactScoreDisplay {
    top: 5px;
    left: 5px;
    max-width: 180px;
  }

  .statusIndicators {
    top: 5px;
    right: 5px;
    max-width: 120px;
  }

  .score, .highScore, .difficultyLevel {
    font-size: 0.8rem;
    padding: 3px 6px;
  }

  .healthBar {
    padding: 3px 6px;
    gap: 4px;
  }

  .healthContainer {
    width: 50px;
    height: 5px;
  }

  .healthLabel {
    font-size: 0.7rem;
  }

  .healthText {
    font-size: 0.65rem;
  }

  .shieldStatus, .boostStatus, .invisibilityStatus, .multishotStatus, 
  .magnetStatus, .timefreezeStatus, .gravityWellStatus, .meteorShowerStatus {
    font-size: 0.65rem;
    padding: 2px 4px;
  }

  .controls {
    bottom: 5px;
    font-size: 0.7rem;
    padding: 4px 10px;
  }
}

// Performance optimizations
.gameCanvas {
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
  
  canvas {
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
  }
}

// Prevent text selection during gameplay
.gameContainer {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-tap-highlight-color: transparent;
}

// Add ambient glow effect to container
.gameContainer::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 900px;
  height: 700px;
  background: radial-gradient(
    ellipse at center,
    rgba(0, 255, 255, 0.1) 0%,
    rgba(0, 100, 255, 0.05) 40%,
    transparent 70%
  );
  pointer-events: none;
  z-index: 0;
  animation: ambientGlow 4s infinite alternate;
}

@keyframes ambientGlow {
  0% {
    opacity: 0.3;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(1.1);
  }
}

// Add scan line effect
.gameCanvas::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    0deg,
    rgba(0, 255, 255, 0.03) 50%,
    transparent 50%
  );
  background-size: 100% 4px;
  pointer-events: none;
  animation: scanline 8s linear infinite;
  border-radius: 15px;
}

@keyframes scanline {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 100%;
  }
}